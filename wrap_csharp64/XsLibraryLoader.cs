/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace XDA {

using System;
using System.Runtime.InteropServices;

public class XsLibraryLoader : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal XsLibraryLoader(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(XsLibraryLoader obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~XsLibraryLoader() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          xsensdeviceapiPINVOKE.delete_XsLibraryLoader(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public XsLibraryLoader() : this(xsensdeviceapiPINVOKE.new_XsLibraryLoader(), true) {
  }

  public bool load(XsString libraryName) {
    bool ret = xsensdeviceapiPINVOKE.XsLibraryLoader_load(swigCPtr, XsString.getCPtr(libraryName));
    if (xsensdeviceapiPINVOKE.SWIGPendingException.Pending) throw xsensdeviceapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isLoaded() {
    bool ret = xsensdeviceapiPINVOKE.XsLibraryLoader_isLoaded(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_void resolve(string functionName) {
    IntPtr cPtr = xsensdeviceapiPINVOKE.XsLibraryLoader_resolve(swigCPtr, functionName);
    SWIGTYPE_p_void ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public void unload() {
    xsensdeviceapiPINVOKE.XsLibraryLoader_unload(swigCPtr);
  }

  public static XsString errorString() {
    XsString ret = new XsString(xsensdeviceapiPINVOKE.XsLibraryLoader_errorString(), true);
    return ret;
  }

}

}
