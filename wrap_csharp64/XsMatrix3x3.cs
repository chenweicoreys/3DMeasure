/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace XDA {

using System;
using System.Runtime.InteropServices;

public class XsMatrix3x3 : XsMatrix {
  private HandleRef swigCPtr;

  internal XsMatrix3x3(IntPtr cPtr, bool cMemoryOwn) : base(xsensdeviceapiPINVOKE.XsMatrix3x3_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(XsMatrix3x3 obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~XsMatrix3x3() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          xsensdeviceapiPINVOKE.delete_XsMatrix3x3(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public XsMatrix3x3() : this(xsensdeviceapiPINVOKE.new_XsMatrix3x3__SWIG_0(), true) {
  }

  public XsMatrix3x3(XsMatrix other) : this(xsensdeviceapiPINVOKE.new_XsMatrix3x3__SWIG_1(XsMatrix.getCPtr(other)), true) {
    if (xsensdeviceapiPINVOKE.SWIGPendingException.Pending) throw xsensdeviceapiPINVOKE.SWIGPendingException.Retrieve();
  }

  public XsMatrix3x3(XsMatrix3x3 other) : this(xsensdeviceapiPINVOKE.new_XsMatrix3x3__SWIG_2(XsMatrix3x3.getCPtr(other)), true) {
    if (xsensdeviceapiPINVOKE.SWIGPendingException.Pending) throw xsensdeviceapiPINVOKE.SWIGPendingException.Retrieve();
  }

  public XsMatrix3x3(double r1c1, double r1c2, double r1c3, double r2c1, double r2c2, double r2c3, double r3c1, double r3c2, double r3c3) : this(xsensdeviceapiPINVOKE.new_XsMatrix3x3__SWIG_3(r1c1, r1c2, r1c3, r2c1, r2c2, r2c3, r3c1, r3c2, r3c3), true) {
  }

}

}
