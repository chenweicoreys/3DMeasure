/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace XDA {

using System;
using System.Runtime.InteropServices;

public class XsGpsPvtData : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal XsGpsPvtData(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(XsGpsPvtData obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~XsGpsPvtData() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          xsensdeviceapiPINVOKE.delete_XsGpsPvtData(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public ushort m_pressure {
    set {
      xsensdeviceapiPINVOKE.XsGpsPvtData_m_pressure_set(swigCPtr, value);
    } 
    get {
      ushort ret = xsensdeviceapiPINVOKE.XsGpsPvtData_m_pressure_get(swigCPtr);
      return ret;
    } 
  }

  public byte m_pressureAge {
    set {
      xsensdeviceapiPINVOKE.XsGpsPvtData_m_pressureAge_set(swigCPtr, value);
    } 
    get {
      byte ret = xsensdeviceapiPINVOKE.XsGpsPvtData_m_pressureAge_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_itow {
    set {
      xsensdeviceapiPINVOKE.XsGpsPvtData_m_itow_set(swigCPtr, value);
    } 
    get {
      uint ret = xsensdeviceapiPINVOKE.XsGpsPvtData_m_itow_get(swigCPtr);
      return ret;
    } 
  }

  public int m_latitude {
    set {
      xsensdeviceapiPINVOKE.XsGpsPvtData_m_latitude_set(swigCPtr, value);
    } 
    get {
      int ret = xsensdeviceapiPINVOKE.XsGpsPvtData_m_latitude_get(swigCPtr);
      return ret;
    } 
  }

  public int m_longitude {
    set {
      xsensdeviceapiPINVOKE.XsGpsPvtData_m_longitude_set(swigCPtr, value);
    } 
    get {
      int ret = xsensdeviceapiPINVOKE.XsGpsPvtData_m_longitude_get(swigCPtr);
      return ret;
    } 
  }

  public int m_height {
    set {
      xsensdeviceapiPINVOKE.XsGpsPvtData_m_height_set(swigCPtr, value);
    } 
    get {
      int ret = xsensdeviceapiPINVOKE.XsGpsPvtData_m_height_get(swigCPtr);
      return ret;
    } 
  }

  public int m_veln {
    set {
      xsensdeviceapiPINVOKE.XsGpsPvtData_m_veln_set(swigCPtr, value);
    } 
    get {
      int ret = xsensdeviceapiPINVOKE.XsGpsPvtData_m_veln_get(swigCPtr);
      return ret;
    } 
  }

  public int m_vele {
    set {
      xsensdeviceapiPINVOKE.XsGpsPvtData_m_vele_set(swigCPtr, value);
    } 
    get {
      int ret = xsensdeviceapiPINVOKE.XsGpsPvtData_m_vele_get(swigCPtr);
      return ret;
    } 
  }

  public int m_veld {
    set {
      xsensdeviceapiPINVOKE.XsGpsPvtData_m_veld_set(swigCPtr, value);
    } 
    get {
      int ret = xsensdeviceapiPINVOKE.XsGpsPvtData_m_veld_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_hacc {
    set {
      xsensdeviceapiPINVOKE.XsGpsPvtData_m_hacc_set(swigCPtr, value);
    } 
    get {
      uint ret = xsensdeviceapiPINVOKE.XsGpsPvtData_m_hacc_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_vacc {
    set {
      xsensdeviceapiPINVOKE.XsGpsPvtData_m_vacc_set(swigCPtr, value);
    } 
    get {
      uint ret = xsensdeviceapiPINVOKE.XsGpsPvtData_m_vacc_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_sacc {
    set {
      xsensdeviceapiPINVOKE.XsGpsPvtData_m_sacc_set(swigCPtr, value);
    } 
    get {
      uint ret = xsensdeviceapiPINVOKE.XsGpsPvtData_m_sacc_get(swigCPtr);
      return ret;
    } 
  }

  public byte m_gpsAge {
    set {
      xsensdeviceapiPINVOKE.XsGpsPvtData_m_gpsAge_set(swigCPtr, value);
    } 
    get {
      byte ret = xsensdeviceapiPINVOKE.XsGpsPvtData_m_gpsAge_get(swigCPtr);
      return ret;
    } 
  }

  public void clear() {
    xsensdeviceapiPINVOKE.XsGpsPvtData_clear(swigCPtr);
  }

  public bool empty() {
    bool ret = xsensdeviceapiPINVOKE.XsGpsPvtData_empty(swigCPtr);
    return ret;
  }

  public XsGpsPvtData() : this(xsensdeviceapiPINVOKE.new_XsGpsPvtData(), true) {
  }

}

}
