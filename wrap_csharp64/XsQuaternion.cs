/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace XDA {

using System;
using System.Runtime.InteropServices;

public class XsQuaternion : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal XsQuaternion(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(XsQuaternion obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~XsQuaternion() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          xsensdeviceapiPINVOKE.delete_XsQuaternion(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public XsQuaternion(double w, double x, double y, double z) : this(xsensdeviceapiPINVOKE.new_XsQuaternion__SWIG_0(w, x, y, z), true) {
  }

  public XsQuaternion(double w, double x, double y) : this(xsensdeviceapiPINVOKE.new_XsQuaternion__SWIG_1(w, x, y), true) {
  }

  public XsQuaternion(double w, double x) : this(xsensdeviceapiPINVOKE.new_XsQuaternion__SWIG_2(w, x), true) {
  }

  public XsQuaternion(double w) : this(xsensdeviceapiPINVOKE.new_XsQuaternion__SWIG_3(w), true) {
  }

  public XsQuaternion() : this(xsensdeviceapiPINVOKE.new_XsQuaternion__SWIG_4(), true) {
  }

  public XsQuaternion(XsQuaternion other) : this(xsensdeviceapiPINVOKE.new_XsQuaternion__SWIG_5(XsQuaternion.getCPtr(other)), true) {
    if (xsensdeviceapiPINVOKE.SWIGPendingException.Pending) throw xsensdeviceapiPINVOKE.SWIGPendingException.Retrieve();
  }

  public XsQuaternion(XsEuler euler) : this(xsensdeviceapiPINVOKE.new_XsQuaternion__SWIG_6(XsEuler.getCPtr(euler)), true) {
    if (xsensdeviceapiPINVOKE.SWIGPendingException.Pending) throw xsensdeviceapiPINVOKE.SWIGPendingException.Retrieve();
  }

  public XsQuaternion(XsMatrix ori) : this(xsensdeviceapiPINVOKE.new_XsQuaternion__SWIG_7(XsMatrix.getCPtr(ori)), true) {
    if (xsensdeviceapiPINVOKE.SWIGPendingException.Pending) throw xsensdeviceapiPINVOKE.SWIGPendingException.Retrieve();
  }

  public void assign(double w, double x, double y, double z) {
    xsensdeviceapiPINVOKE.XsQuaternion_assign__SWIG_0(swigCPtr, w, x, y, z);
  }

  public void assign(SWIGTYPE_p_double values) {
    xsensdeviceapiPINVOKE.XsQuaternion_assign__SWIG_1(swigCPtr, SWIGTYPE_p_double.getCPtr(values));
  }

  public SWIGTYPE_p_double data() {
    IntPtr cPtr = xsensdeviceapiPINVOKE.XsQuaternion_data(swigCPtr);
    SWIGTYPE_p_double ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
    return ret;
  }

  public XsQuaternion inverse() {
    XsQuaternion ret = new XsQuaternion(xsensdeviceapiPINVOKE.XsQuaternion_inverse(swigCPtr), true);
    return ret;
  }

  public XsQuaternion conjugate() {
    XsQuaternion ret = new XsQuaternion(xsensdeviceapiPINVOKE.XsQuaternion_conjugate(swigCPtr), true);
    return ret;
  }

  public XsQuaternion normalized() {
    XsQuaternion ret = new XsQuaternion(xsensdeviceapiPINVOKE.XsQuaternion_normalized(swigCPtr), true);
    return ret;
  }

  public double normalize() {
    double ret = xsensdeviceapiPINVOKE.XsQuaternion_normalize(swigCPtr);
    return ret;
  }

  public bool empty() {
    bool ret = xsensdeviceapiPINVOKE.XsQuaternion_empty(swigCPtr);
    return ret;
  }

  public XsQuaternion fromEulerAngles(XsEuler src) {
    XsQuaternion ret = new XsQuaternion(xsensdeviceapiPINVOKE.XsQuaternion_fromEulerAngles(swigCPtr, XsEuler.getCPtr(src)), false);
    if (xsensdeviceapiPINVOKE.SWIGPendingException.Pending) throw xsensdeviceapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public XsQuaternion fromRotationMatrix(XsMatrix ori) {
    XsQuaternion ret = new XsQuaternion(xsensdeviceapiPINVOKE.XsQuaternion_fromRotationMatrix(swigCPtr, XsMatrix.getCPtr(ori)), false);
    if (xsensdeviceapiPINVOKE.SWIGPendingException.Pending) throw xsensdeviceapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static XsQuaternion identity() {
    XsQuaternion ret = new XsQuaternion(xsensdeviceapiPINVOKE.XsQuaternion_identity(), false);
    return ret;
  }

  public double w() {
    double ret = xsensdeviceapiPINVOKE.XsQuaternion_w__SWIG_0(swigCPtr);
    return ret;
  }

  public double x() {
    double ret = xsensdeviceapiPINVOKE.XsQuaternion_x__SWIG_0(swigCPtr);
    return ret;
  }

  public double y() {
    double ret = xsensdeviceapiPINVOKE.XsQuaternion_y__SWIG_0(swigCPtr);
    return ret;
  }

  public double z() {
    double ret = xsensdeviceapiPINVOKE.XsQuaternion_z__SWIG_0(swigCPtr);
    return ret;
  }

  public void swap(XsQuaternion other) {
    xsensdeviceapiPINVOKE.XsQuaternion_swap(swigCPtr, XsQuaternion.getCPtr(other));
    if (xsensdeviceapiPINVOKE.SWIGPendingException.Pending) throw xsensdeviceapiPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
