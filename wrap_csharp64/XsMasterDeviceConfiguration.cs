/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace XDA {

using System;
using System.Runtime.InteropServices;

public class XsMasterDeviceConfiguration : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal XsMasterDeviceConfiguration(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(XsMasterDeviceConfiguration obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~XsMasterDeviceConfiguration() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          xsensdeviceapiPINVOKE.delete_XsMasterDeviceConfiguration(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public uint m_masterDeviceId {
    set {
      xsensdeviceapiPINVOKE.XsMasterDeviceConfiguration_m_masterDeviceId_set(swigCPtr, value);
    } 
    get {
      uint ret = xsensdeviceapiPINVOKE.XsMasterDeviceConfiguration_m_masterDeviceId_get(swigCPtr);
      return ret;
    } 
  }

  public ushort m_samplingPeriod {
    set {
      xsensdeviceapiPINVOKE.XsMasterDeviceConfiguration_m_samplingPeriod_set(swigCPtr, value);
    } 
    get {
      ushort ret = xsensdeviceapiPINVOKE.XsMasterDeviceConfiguration_m_samplingPeriod_get(swigCPtr);
      return ret;
    } 
  }

  public ushort m_outputSkipFactor {
    set {
      xsensdeviceapiPINVOKE.XsMasterDeviceConfiguration_m_outputSkipFactor_set(swigCPtr, value);
    } 
    get {
      ushort ret = xsensdeviceapiPINVOKE.XsMasterDeviceConfiguration_m_outputSkipFactor_get(swigCPtr);
      return ret;
    } 
  }

  public ushort m_syncInMode {
    set {
      xsensdeviceapiPINVOKE.XsMasterDeviceConfiguration_m_syncInMode_set(swigCPtr, value);
    } 
    get {
      ushort ret = xsensdeviceapiPINVOKE.XsMasterDeviceConfiguration_m_syncInMode_get(swigCPtr);
      return ret;
    } 
  }

  public ushort m_syncInSkipFactor {
    set {
      xsensdeviceapiPINVOKE.XsMasterDeviceConfiguration_m_syncInSkipFactor_set(swigCPtr, value);
    } 
    get {
      ushort ret = xsensdeviceapiPINVOKE.XsMasterDeviceConfiguration_m_syncInSkipFactor_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_syncInOffset {
    set {
      xsensdeviceapiPINVOKE.XsMasterDeviceConfiguration_m_syncInOffset_set(swigCPtr, value);
    } 
    get {
      uint ret = xsensdeviceapiPINVOKE.XsMasterDeviceConfiguration_m_syncInOffset_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_char m_date {
    set {
      xsensdeviceapiPINVOKE.XsMasterDeviceConfiguration_m_date_set(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(value));
    } 
    get {
      IntPtr cPtr = xsensdeviceapiPINVOKE.XsMasterDeviceConfiguration_m_date_get(swigCPtr);
      SWIGTYPE_p_unsigned_char ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_char m_time {
    set {
      xsensdeviceapiPINVOKE.XsMasterDeviceConfiguration_m_time_set(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(value));
    } 
    get {
      IntPtr cPtr = xsensdeviceapiPINVOKE.XsMasterDeviceConfiguration_m_time_get(swigCPtr);
      SWIGTYPE_p_unsigned_char ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_char m_reservedForHost {
    set {
      xsensdeviceapiPINVOKE.XsMasterDeviceConfiguration_m_reservedForHost_set(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(value));
    } 
    get {
      IntPtr cPtr = xsensdeviceapiPINVOKE.XsMasterDeviceConfiguration_m_reservedForHost_get(swigCPtr);
      SWIGTYPE_p_unsigned_char ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_char m_reservedForClient {
    set {
      xsensdeviceapiPINVOKE.XsMasterDeviceConfiguration_m_reservedForClient_set(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(value));
    } 
    get {
      IntPtr cPtr = xsensdeviceapiPINVOKE.XsMasterDeviceConfiguration_m_reservedForClient_get(swigCPtr);
      SWIGTYPE_p_unsigned_char ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
      return ret;
    } 
  }

  public XsMasterDeviceConfiguration() : this(xsensdeviceapiPINVOKE.new_XsMasterDeviceConfiguration(), true) {
  }

}

}
