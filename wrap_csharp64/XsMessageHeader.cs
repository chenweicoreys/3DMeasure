/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace XDA {

using System;
using System.Runtime.InteropServices;

public class XsMessageHeader : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal XsMessageHeader(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(XsMessageHeader obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~XsMessageHeader() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          xsensdeviceapiPINVOKE.delete_XsMessageHeader(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public byte m_preamble {
    set {
      xsensdeviceapiPINVOKE.XsMessageHeader_m_preamble_set(swigCPtr, value);
    } 
    get {
      byte ret = xsensdeviceapiPINVOKE.XsMessageHeader_m_preamble_get(swigCPtr);
      return ret;
    } 
  }

  public byte m_busId {
    set {
      xsensdeviceapiPINVOKE.XsMessageHeader_m_busId_set(swigCPtr, value);
    } 
    get {
      byte ret = xsensdeviceapiPINVOKE.XsMessageHeader_m_busId_get(swigCPtr);
      return ret;
    } 
  }

  public byte m_messageId {
    set {
      xsensdeviceapiPINVOKE.XsMessageHeader_m_messageId_set(swigCPtr, value);
    } 
    get {
      byte ret = xsensdeviceapiPINVOKE.XsMessageHeader_m_messageId_get(swigCPtr);
      return ret;
    } 
  }

  public byte m_length {
    set {
      xsensdeviceapiPINVOKE.XsMessageHeader_m_length_set(swigCPtr, value);
    } 
    get {
      byte ret = xsensdeviceapiPINVOKE.XsMessageHeader_m_length_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_XsMessageHeader__LengthData m_datlen {
    set {
      xsensdeviceapiPINVOKE.XsMessageHeader_m_datlen_set(swigCPtr, SWIGTYPE_p_XsMessageHeader__LengthData.getCPtr(value));
    } 
    get {
      IntPtr cPtr = xsensdeviceapiPINVOKE.XsMessageHeader_m_datlen_get(swigCPtr);
      SWIGTYPE_p_XsMessageHeader__LengthData ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_XsMessageHeader__LengthData(cPtr, false);
      return ret;
    } 
  }

  public XsMessageHeader() : this(xsensdeviceapiPINVOKE.new_XsMessageHeader(), true) {
  }

}

}
